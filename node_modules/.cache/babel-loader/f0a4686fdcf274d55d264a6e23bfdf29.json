{"ast":null,"code":"import _classCallCheck from\"/Users/graj/projects/Personal-Task-Manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/graj/projects/Personal-Task-Manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/graj/projects/Personal-Task-Manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/graj/projects/Personal-Task-Manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import\"../styles/CardEditor.css\";import React,{Component}from\"react\";import TextareaAutosize from\"react-textarea-autosize\";import EditButtons from\"./EditButtons\";var CardEditor=/*#__PURE__*/function(_Component){_inherits(CardEditor,_Component);var _super=_createSuper(CardEditor);function CardEditor(){var _this;_classCallCheck(this,CardEditor);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={text:_this.props.text||\"\"};_this.handleChangeText=function(event){return _this.setState({text:event.target.value});};_this.onEnter=function(e){var text=_this.state.text;if(e.keyCode===13){e.preventDefault();_this.props.onSave(text);}};return _this;}_createClass(CardEditor,[{key:\"render\",value:function render(){var text=this.state.text;var _this$props=this.props,onSave=_this$props.onSave,onCancel=_this$props.onCancel,onDelete=_this$props.onDelete,adding=_this$props.adding;return/*#__PURE__*/React.createElement(\"div\",{className:\"Edit-Card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"Card\",onClick:this.onOpen},/*#__PURE__*/React.createElement(TextareaAutosize,{autoFocus:true,className:\"Edit-Card-Textarea\",placeholder:\"Enter the Title/Description for this card...\",value:text,onChange:this.handleChangeText,onKeyDown:this.onEnter})),/*#__PURE__*/React.createElement(EditButtons,{handleSave:function handleSave(){return onSave(text);},saveLabel:adding?\"Add card\":\"Save\",handleDelete:onDelete,handleCancel:onCancel}));}}]);return CardEditor;}(Component);export default CardEditor;","map":{"version":3,"sources":["/Users/graj/projects/Personal-Task-Manager/src/components/CardEditor.js"],"names":["React","Component","TextareaAutosize","EditButtons","CardEditor","state","text","props","handleChangeText","event","setState","target","value","onEnter","e","keyCode","preventDefault","onSave","onCancel","onDelete","adding","onOpen"],"mappings":"onBAAA,MAAO,0BAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,yBAA7B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,C,GAEMC,CAAAA,U,2UACJC,K,CAAQ,CACNC,IAAI,CAAE,MAAKC,KAAL,CAAWD,IAAX,EAAmB,EADnB,C,OAKRE,gB,CAAmB,SAAAC,KAAK,QAAI,OAAKC,QAAL,CAAc,CAAEJ,IAAI,CAAEG,KAAK,CAACE,MAAN,CAAaC,KAArB,CAAd,CAAJ,E,OAGxBC,O,CAAU,SAAAC,CAAC,CAAI,IACLR,CAAAA,IADK,CACI,MAAKD,KADT,CACLC,IADK,CAGb,GAAIQ,CAAC,CAACC,OAAF,GAAc,EAAlB,CAAsB,CACpBD,CAAC,CAACE,cAAF,GACA,MAAKT,KAAL,CAAWU,MAAX,CAAkBX,IAAlB,EACD,CACF,C,6EAEQ,IACCA,CAAAA,IADD,CACU,KAAKD,KADf,CACCC,IADD,iBAEwC,KAAKC,KAF7C,CAECU,MAFD,aAECA,MAFD,CAESC,QAFT,aAESA,QAFT,CAEmBC,QAFnB,aAEmBA,QAFnB,CAE6BC,MAF7B,aAE6BA,MAF7B,CAIP,mBACE,2BAAK,SAAS,CAAC,WAAf,eACE,2BAAK,SAAS,CAAC,MAAf,CAAsB,OAAO,CAAE,KAAKC,MAApC,eACE,oBAAC,gBAAD,EACE,SAAS,KADX,CAEE,SAAS,CAAC,oBAFZ,CAGE,WAAW,CAAC,8CAHd,CAIE,KAAK,CAAEf,IAJT,CAKE,QAAQ,CAAE,KAAKE,gBALjB,CAME,SAAS,CAAE,KAAKK,OANlB,EADF,CADF,cAYE,oBAAC,WAAD,EACE,UAAU,CAAE,4BAAMI,CAAAA,MAAM,CAACX,IAAD,CAAZ,EADd,CAEE,SAAS,CAAEc,MAAM,CAAG,UAAH,CAAgB,MAFnC,CAGE,YAAY,CAAED,QAHhB,CAIE,YAAY,CAAED,QAJhB,EAZF,CADF,CAqBD,C,wBA3CsBjB,S,EA8CzB,cAAeG,CAAAA,UAAf","sourcesContent":["import \"../styles/CardEditor.css\";\nimport React, { Component } from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport EditButtons from \"./EditButtons\";\n\nclass CardEditor extends Component {\n  state = {\n    text: this.props.text || \"\"\n  };\n\n  //Changes the text value as user types in and sets to state value\n  handleChangeText = event => this.setState({ text: event.target.value });\n\n  //On typing enter from keyboard saves the value\n  onEnter = e => {\n    const { text } = this.state;\n\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.props.onSave(text);\n    }\n  };\n\n  render() {\n    const { text } = this.state;\n    const { onSave, onCancel, onDelete, adding } = this.props;\n\n    return (\n      <div className=\"Edit-Card\">\n        <div className=\"Card\" onClick={this.onOpen}>\n          <TextareaAutosize\n            autoFocus\n            className=\"Edit-Card-Textarea\"\n            placeholder=\"Enter the Title/Description for this card...\"\n            value={text}\n            onChange={this.handleChangeText}\n            onKeyDown={this.onEnter}\n          />\n        </div>\n        {/* Save and delete buttons will come from editbuttons Component */}\n        <EditButtons\n          handleSave={() => onSave(text)}\n          saveLabel={adding ? \"Add card\" : \"Save\"}\n          handleDelete={onDelete}\n          handleCancel={onCancel}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CardEditor;"]},"metadata":{},"sourceType":"module"}