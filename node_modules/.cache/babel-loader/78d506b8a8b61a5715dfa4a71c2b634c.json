{"ast":null,"code":"var _jsxFileName = \"/Users/graj/projects/task_board/task_board/src/components/List.js\";\nimport \"../styles/List.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Card from \"./Card\";\nimport CardEditor from \"./CardEditor\";\nimport shortid from \"shortid\";\nimport ListEditor from \"./ListEditor\";\n\nclass List extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editingTitle: false,\n      title: this.props.list.title,\n      addingCard: false\n    };\n\n    this.toggleAddingCard = () => this.setState({\n      addingCard: !this.state.addingCard\n    });\n\n    this.addCard = async cardText => {\n      const {\n        listId,\n        dispatch\n      } = this.props;\n      this.toggleAddingCard();\n      const cardId = shortid.generate();\n      dispatch({\n        type: \"ADD_CARD\",\n        payload: {\n          cardText,\n          cardId,\n          listId\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      list\n    } = this.props;\n    const {\n      addingCard\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"List\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"List-Title\",\n      onClick: this.toggleEditingTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, list.title), addingCard ? /*#__PURE__*/React.createElement(CardEditor, {\n      onSave: this.addCard,\n      onCancel: this.toggleAddingCard,\n      adding: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Toggle-Add-Card\",\n      onClick: this.toggleAddingCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ion-icon\", {\n      name: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), \" Add a card\"), list.cards && list.cards.map((cardId, index) => /*#__PURE__*/React.createElement(Card, {\n      key: cardId,\n      cardId: cardId,\n      index: index,\n      listId: list.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  list: state.listsById[ownProps.listId]\n});\n\nexport default connect(mapStateToProps)(List);","map":{"version":3,"sources":["/Users/graj/projects/task_board/task_board/src/components/List.js"],"names":["React","Component","connect","Card","CardEditor","shortid","ListEditor","List","state","editingTitle","title","props","list","addingCard","toggleAddingCard","setState","addCard","cardText","listId","dispatch","cardId","generate","type","payload","render","toggleEditingTitle","cards","map","index","id","mapStateToProps","ownProps","listsById"],"mappings":";AAAA,OAAO,oBAAP;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACvBO,KADuB,GACf;AACNC,MAAAA,YAAY,EAAE,KADR;AAENC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBF,KAFjB;AAGNG,MAAAA,UAAU,EAAE;AAHN,KADe;;AAAA,SAOvBC,gBAPuB,GAOJ,MACjB,KAAKC,QAAL,CAAc;AAAEF,MAAAA,UAAU,EAAE,CAAC,KAAKL,KAAL,CAAWK;AAA1B,KAAd,CARqB;;AAAA,SAUvBG,OAVuB,GAUb,MAAMC,QAAN,IAAkB;AAC1B,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAuB,KAAKR,KAAlC;AAEA,WAAKG,gBAAL;AAEA,YAAMM,MAAM,GAAGf,OAAO,CAACgB,QAAR,EAAf;AAEAF,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAE,UADC;AAEPC,QAAAA,OAAO,EAAE;AAAEN,UAAAA,QAAF;AAAYG,UAAAA,MAAZ;AAAoBF,UAAAA;AAApB;AAFF,OAAD,CAAR;AAID,KArBsB;AAAA;;AAwB3BM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAiB,KAAKL,KAA5B;AAKA,wBAGE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,OAAO,EAAE,KAAKiB,kBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGb,IAAI,CAACF,KADR,CADF,EAKGG,UAAU,gBACP,oBAAC,UAAD;AACA,MAAA,MAAM,EAAE,KAAKG,OADb;AAEA,MAAA,QAAQ,EAAE,KAAKF,gBAFf;AAGA,MAAA,MAAM,MAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO,gBAOP;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,OAAO,EAAE,KAAKA,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAU,MAAA,IAAI,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,gBAZN,EAiBGF,IAAI,CAACc,KAAL,IACCd,IAAI,CAACc,KAAL,CAAWC,GAAX,CAAe,CAACP,MAAD,EAASQ,KAAT,kBACb,oBAAC,IAAD;AACE,MAAA,GAAG,EAAER,MADP;AAEE,MAAA,MAAM,EAAEA,MAFV;AAGE,MAAA,KAAK,EAAEQ,KAHT;AAIE,MAAA,MAAM,EAAEhB,IAAI,CAACiB,EAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAlBJ,CAHF;AA+BD;;AA9D0B;;AAiE7B,MAAMC,eAAe,GAAG,CAACtB,KAAD,EAAQuB,QAAR,MAAsB;AAC5CnB,EAAAA,IAAI,EAAEJ,KAAK,CAACwB,SAAN,CAAgBD,QAAQ,CAACb,MAAzB;AADsC,CAAtB,CAAxB;;AAIA,eAAehB,OAAO,CAAC4B,eAAD,CAAP,CAAyBvB,IAAzB,CAAf","sourcesContent":["import \"../styles/List.css\";\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Card from \"./Card\";\nimport CardEditor from \"./CardEditor\";\nimport shortid from \"shortid\";\nimport ListEditor from \"./ListEditor\";\n\n\nclass List extends Component {\n      state = {\n        editingTitle: false,\n        title: this.props.list.title,\n        addingCard: false\n      };\n      \n      toggleAddingCard = () =>\n        this.setState({ addingCard: !this.state.addingCard });\n      \n      addCard = async cardText => {\n        const { listId, dispatch } = this.props;\n      \n        this.toggleAddingCard();\n      \n        const cardId = shortid.generate();\n      \n        dispatch({\n          type: \"ADD_CARD\",\n          payload: { cardText, cardId, listId }\n        });\n      };\n\n\n  render() {\n    const { list } = this.props;\n    const { addingCard } = this.state;\n\n\n\n\n    return (\n    \n\n      <div className=\"List\">\n        <div className=\"List-Title\" onClick={this.toggleEditingTitle}>\n          {list.title}\n        </div>\n       \n        {addingCard ? (\n            <CardEditor\n            onSave={this.addCard}\n            onCancel={this.toggleAddingCard}\n            adding\n            />\n        ) : (\n            <div className=\"Toggle-Add-Card\" onClick={this.toggleAddingCard}>\n            <ion-icon name=\"add\" /> Add a card\n            </div>\n        )}\n\n        {list.cards &&\n          list.cards.map((cardId, index) => (\n            <Card\n              key={cardId}\n              cardId={cardId}\n              index={index}\n              listId={list.id}\n            />\n          ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  list: state.listsById[ownProps.listId]\n});\n\nexport default connect(mapStateToProps)(List);"]},"metadata":{},"sourceType":"module"}