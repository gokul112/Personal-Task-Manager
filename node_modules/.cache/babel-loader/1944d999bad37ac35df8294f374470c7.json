{"ast":null,"code":"var _jsxFileName = \"/Users/graj/projects/task_board/task_board/src/components/Board.js\";\nimport \"../styles/Board.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport AddList from \"./AddList\";\nimport List from \"./List\";\n\nclass Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      addingList: false\n    };\n\n    this.toggleAddingList = () => this.setState({\n      addingList: !this.state.addingList\n    });\n\n    this.handleDragEnd = ({\n      source,\n      destination,\n      type\n    }) => {\n      // dropped outside the allowed zones\n      if (!destination) return;\n      const {\n        dispatch\n      } = this.props; // Move list\n\n      if (type === \"COLUMN\") {\n        // Prevent update if nothing has changed\n        if (source.index !== destination.index) {\n          dispatch({\n            type: \"MOVE_LIST\",\n            payload: {\n              oldListIndex: source.index,\n              newListIndex: destination.index\n            }\n          });\n        }\n\n        return;\n      }\n\n      if (source.index !== destination.index || source.droppableId !== destination.droppableId) {\n        dispatch({\n          type: \"MOVE_CARD\",\n          payload: {\n            sourceListId: source.droppableId,\n            destListId: destination.droppableId,\n            oldCardIndex: source.index,\n            newCardIndex: destination.index\n          }\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      board\n    } = this.props;\n    const {\n      addingList\n    } = this.state;\n    return /*#__PURE__*/React.createElement(DragDropContext, {\n      onDragEnd: this.handleDragEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"board\",\n      direction: \"horizontal\",\n      type: \"COLUMN\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, (provided, _snapshot) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Board\",\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, board.lists.map((listId, index) => {\n      return /*#__PURE__*/React.createElement(List, {\n        listId: listId,\n        key: listId,\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 24\n        }\n      });\n    }), provided.placeholder, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Add-List\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, addingList ? /*#__PURE__*/React.createElement(AddList, {\n      toggleAddingList: this.toggleAddingList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.toggleAddingList,\n      className: \"Add-List-Button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"ion-icon\", {\n      name: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }), \" Add a list\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  board: state.board\n});\n\nexport default connect(mapStateToProps)(Board);","map":{"version":3,"sources":["/Users/graj/projects/task_board/task_board/src/components/Board.js"],"names":["React","Component","connect","DragDropContext","Droppable","AddList","List","Board","state","addingList","toggleAddingList","setState","handleDragEnd","source","destination","type","dispatch","props","index","payload","oldListIndex","newListIndex","droppableId","sourceListId","destListId","oldCardIndex","newCardIndex","render","board","provided","_snapshot","innerRef","lists","map","listId","placeholder","mapStateToProps"],"mappings":"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","sourcesContent":["import \"../styles/Board.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport AddList from \"./AddList\";\nimport List from \"./List\";\n\nclass Board extends Component {\n    state = {\n        addingList: false\n      };\n      \n      toggleAddingList = () =>\n        this.setState({ addingList: !this.state.addingList });\n\n    handleDragEnd = ({ source, destination, type }) => {\n            // dropped outside the allowed zones\n            if (!destination) return;\n          \n            const { dispatch } = this.props;\n          \n            // Move list\n            if (type === \"COLUMN\") {\n              // Prevent update if nothing has changed\n              if (source.index !== destination.index) {\n                dispatch({\n                  type: \"MOVE_LIST\",\n                  payload: {\n                    oldListIndex: source.index,\n                    newListIndex: destination.index\n                  }\n                });\n              }\n              return;\n            }\n            if (source.index !== destination.index ||\n                source.droppableId !== destination.droppableId) {\n                dispatch({\n                  type: \"MOVE_CARD\",\n                  payload: {\n                    sourceListId: source.droppableId,\n                    destListId: destination.droppableId,\n                    oldCardIndex: source.index,\n                    newCardIndex: destination.index\n                  }\n                });\n            }\n     };\n    \n\n  render() {\n    const { board } = this.props;\n    const { addingList } = this.state;\n\n    return (\n        <DragDropContext onDragEnd={this.handleDragEnd}>\n        <Droppable droppableId=\"board\" direction=\"horizontal\" type=\"COLUMN\">\n          {(provided, _snapshot) => (\n            <div className=\"Board\" ref={provided.innerRef}>\n              {board.lists.map((listId, index) => {\n                return <List listId={listId} key={listId} index={index} />;\n              })}\n  \n              {provided.placeholder}\n  \n              <div className=\"Add-List\">\n                {addingList ? (\n                  <AddList toggleAddingList={this.toggleAddingList} />\n                ) : (\n                  <div\n                    onClick={this.toggleAddingList}\n                    className=\"Add-List-Button\"\n                  >\n                    <ion-icon name=\"add\" /> Add a list\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({ board: state.board });\n\nexport default connect(mapStateToProps)(Board);"]},"metadata":{},"sourceType":"module"}