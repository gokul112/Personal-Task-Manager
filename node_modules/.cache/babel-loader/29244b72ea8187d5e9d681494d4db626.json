{"ast":null,"code":"var _jsxFileName = \"/Users/graj/projects/task_board/task_board/src/components/Card.js\";\nimport \"../styles/Card.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport CardEditor from \"./CardEditor\";\nimport CardView from \"./CardView\";\n\nclass Card extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hover: false,\n      editing: false,\n      show: false\n    };\n\n    this.startHover = () => this.setState({\n      hover: true\n    });\n\n    this.endHover = () => this.setState({\n      hover: false\n    });\n\n    this.startEditing = () => this.setState({\n      hover: false,\n      editing: true,\n      text: this.props.card.text\n    });\n\n    this.endEditing = () => this.setState({\n      hover: false,\n      editing: false\n    });\n\n    this.editCard = async text => {\n      const {\n        card,\n        dispatch\n      } = this.props;\n      this.endEditing();\n      dispatch({\n        type: \"CHANGE_CARD_TEXT\",\n        payload: {\n          cardId: card.id,\n          cardText: text\n        }\n      });\n    };\n\n    this.deleteCard = async () => {\n      const {\n        listId,\n        card,\n        dispatch\n      } = this.props;\n      dispatch({\n        type: \"DELETE_CARD\",\n        payload: {\n          cardId: card.id,\n          listId\n        }\n      });\n    };\n\n    this.onOpen = () => this.setState({\n      show: true\n    });\n\n    this.onClose = e => {\n      e.stopPropagation();\n      this.setState({\n        show: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      card,\n      index,\n      listId\n    } = this.props;\n    const {\n      hover,\n      editing,\n      show\n    } = this.state;\n\n    if (!editing) {\n      return /*#__PURE__*/React.createElement(Draggable, {\n        draggableId: card.id,\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        ref: provided.innerRef\n      }, provided.draggableProps, provided.dragHandleProps, {\n        className: \"Card\",\n        onMouseEnter: this.startHover,\n        onMouseLeave: this.endHover,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }), hover && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Card-Icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Card-Icon\",\n        onClick: this.startEditing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"ion-icon\", {\n        name: \"create\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        onClick: this.onOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }, \" \", card.text), show && /*#__PURE__*/React.createElement(CardView, {\n        item: card,\n        onClose: this.onClose,\n        show: show,\n        listId: listId,\n        deleteCard: this.deleteCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(CardEditor, {\n        text: card.text,\n        onSave: this.editCard,\n        onDelete: this.deleteCard,\n        onCancel: this.endEditing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  card: state.cardsById[ownProps.cardId]\n});\n\nexport default connect(mapStateToProps)(Card);","map":{"version":3,"sources":["/Users/graj/projects/task_board/task_board/src/components/Card.js"],"names":["React","Component","connect","Draggable","CardEditor","CardView","Card","state","hover","editing","show","startHover","setState","endHover","startEditing","text","props","card","endEditing","editCard","dispatch","type","payload","cardId","id","cardText","deleteCard","listId","onOpen","onClose","e","stopPropagation","render","index","provided","snapshot","innerRef","draggableProps","dragHandleProps","mapStateToProps","ownProps","cardsById"],"mappings":"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","sourcesContent":["import \"../styles/Card.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport CardEditor from \"./CardEditor\";\nimport CardView from \"./CardView\";\n\nclass Card extends Component {\n\n  state = {\n    hover: false,\n    editing: false,\n    show: false\n  };\n  \n  //when hover edit button will be shown via hover boolen value\n  startHover = () => this.setState({ hover: true });\n  endHover = () => this.setState({ hover: false });\n\n  //While editing setting the boolean values to show correctly\n  startEditing = () =>\n    this.setState({\n      hover: false,\n      editing: true,\n      text: this.props.card.text\n    });\n  \n  //After editing updating the state values to identify it is not in editing state.\n  endEditing = () => this.setState({ hover: false, editing: false });\n  \n  //Edit the card text by calling dispatcher method by sending the cardid and text\n  editCard = async text => {\n    const { card, dispatch } = this.props;\n  \n    this.endEditing();\n  \n    dispatch({\n      type: \"CHANGE_CARD_TEXT\",\n      payload: { cardId: card.id, cardText: text }\n    });\n  };\n  \n  //Delete card by calling dispatcher method using id\n  deleteCard = async () => {\n    const { listId, card, dispatch } = this.props;\n  \n    dispatch({\n      type: \"DELETE_CARD\",\n      payload: { cardId: card.id, listId }\n    });\n  };\n\n  //Opens the modal and Updated the show value to identify the modal state. It shows the card description and comments can be added\n  onOpen = () => this.setState({show:true});\n\n  //Updating state value when modal is closed .\n  onClose = (e) =>{\n    e.stopPropagation();\n    this.setState({show:false});\n  }\n  \n\n  render() {\n      const { card, index, listId} = this.props;\n      const { hover, editing, show } = this.state;\n\n      if (!editing) {\n        return (\n          <Draggable draggableId={card.id} index={index}>\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              className=\"Card\"\n              onMouseEnter={this.startHover}\n              onMouseLeave={this.endHover}\n            >\n              {hover && (\n                <div className=\"Card-Icons\">\n                  <div className=\"Card-Icon\" onClick={this.startEditing}>\n                    <ion-icon name=\"create\" />\n                  </div>\n                </div>\n              )}\n            \n              <div onClick={this.onOpen}> {card.text}</div>\n\n              {show && (<CardView\n                    item={card}\n                    onClose={this.onClose}\n                    show={show}\n                    listId={listId}\n                    deleteCard={this.deleteCard}\n                />)}\n            </div>\n              \n          )}\n      \n        </Draggable>\n          \n        );\n      } else {\n        return (\n          <CardEditor\n            text={card.text}\n            onSave={this.editCard}\n            onDelete={this.deleteCard}\n            onCancel={this.endEditing}\n          />\n        );\n      }\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  card: state.cardsById[ownProps.cardId]\n});\n\nexport default connect(mapStateToProps)(Card);"]},"metadata":{},"sourceType":"module"}