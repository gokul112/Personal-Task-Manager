{"ast":null,"code":"var _jsxFileName = \"/Users/graj/projects/task_board/task_board/src/components/CardView.js\";\nimport React, { Component } from \"react\";\nimport Modal from \"react-modal\";\nimport { connect } from \"react-redux\";\nimport shortid from \"shortid\";\nimport EditButtons from \"./EditButtons\";\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: '50%',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\nModal.setAppElement('#root');\n\nclass CardView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: []\n    };\n\n    this.handleChangeText = event => this.setState({\n      comments: event.target.value\n    });\n\n    this.addComment = async Comment => {\n      const {\n        item,\n        dispatch\n      } = this.props;\n      const {\n        comments\n      } = this.state;\n      dispatch({\n        type: \"ADD_COMMENT_TO_CARD\",\n        payload: {\n          comment: comments,\n          cardId: item.id\n        }\n      });\n      this.setState({\n        comments: []\n      });\n    };\n\n    this.deleteComment = async () => {\n      const {\n        item,\n        dispatch\n      } = this.props;\n      dispatch({\n        type: \"DELETE_COMMENT\",\n        payload: {\n          cardId: item.id\n        }\n      });\n    };\n  }\n\n  //Renders the modal\n  render() {\n    const {\n      comments\n    } = this.state;\n    const {\n      show,\n      onClose,\n      item,\n      deleteCard\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Modal, {\n      isOpen: show,\n      onRequestClose: onClose,\n      style: customStyles,\n      overlayClassName: \"overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"pull-right\",\n      onClick: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, \"X\"), /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        flex: \"1 90%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }, item.text), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pull-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(EditButtons, {\n      handleDelete: () => deleteCard(),\n      handleComment: \"Card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }\n    }, \"Comments\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"Comments\",\n      rows: \"3\",\n      value: comments,\n      onChange: this.handleChangeText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(EditButtons, {\n      handleSave: () => this.addComment(comments),\n      saveLabel: \"Add Comment\",\n      handleDelete: () => this.deleteComment(),\n      handleComment: \"Comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, \"Previous Comments\"), item.comment && item.comment.map(value => /*#__PURE__*/React.createElement(\"div\", {\n      key: shortid.generate(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    }, value))));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  card: state.cardsById[ownProps.cardId]\n});\n\nexport default connect(mapStateToProps)(CardView);","map":{"version":3,"sources":["/Users/graj/projects/task_board/task_board/src/components/CardView.js"],"names":["React","Component","Modal","connect","shortid","EditButtons","customStyles","content","top","left","right","bottom","marginRight","transform","setAppElement","CardView","state","comments","handleChangeText","event","setState","target","value","addComment","Comment","item","dispatch","props","type","payload","comment","cardId","id","deleteComment","render","show","onClose","deleteCard","flex","text","map","generate","mapStateToProps","ownProps","card","cardsById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Modal from \"react-modal\";\nimport { connect } from \"react-redux\";\nimport shortid from \"shortid\";\nimport EditButtons from \"./EditButtons\";\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : '50%',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n  };\n\nModal.setAppElement('#root')\n\n\nclass CardView extends Component {\n\n    state = {\n        comments:[]\n    }\n\n//Set state value when user changes in text box\nhandleChangeText = event => this.setState({ comments: event.target.value });\n\n//Add Comments to the Card selected using dispatcher method and update the store.\n addComment = async Comment => {\n        const { item, dispatch } = this.props;\n        const {comments} = this.state;\n      \n        dispatch({\n          type: \"ADD_COMMENT_TO_CARD\",\n          payload: { comment:comments, cardId:item.id }\n        });\n        this.setState({comments:[]})\n};\n\n//Delete All Comments respective to the card selected by using dispatcher method\ndeleteComment = async () => {\n        const {  item, dispatch } = this.props;\n      \n        dispatch({\n          type: \"DELETE_COMMENT\",\n          payload: { cardId: item.id }\n        });\n};\n    \n//Renders the modal\nrender() {\n    const {comments} = this.state;\n    const { show, onClose, item, deleteCard } = this.props;\n    \n    return (\n            <Modal\n                isOpen={show}\n                onRequestClose={onClose}\n                style={customStyles}\n                overlayClassName={\"overlay\"}\n            >\n                        <div>\n                            <button className=\"pull-right\" onClick={onClose}>X</button>\n                            <h1 style={{ flex: \"1 90%\" }}>{item.text}</h1>\n                            <div className=\"pull-right\">\n                                <EditButtons\n                                    handleDelete={() => deleteCard()}\n                                    handleComment=\"Card\"\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Comments\">Comments</label>\n                                <textarea className=\"form-control\" id=\"Comments\" rows=\"3\" value={comments}\n                                onChange={this.handleChangeText}></textarea>\n                            </div>\n                            <EditButtons\n                                handleSave={() => this.addComment(comments)}\n                                saveLabel=\"Add Comment\"\n                                handleDelete={() => this.deleteComment()}\n                                handleComment=\"Comments\"\n                            />\n                            <h2>Previous Comments</h2>\n                            {item.comment && item.comment.map((value)=>\n                                <div key={shortid.generate()}>{value}</div>\n                            )}\n                        </div>\n            </Modal>\n                );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    card: state.cardsById[ownProps.cardId]\n  });\n  \nexport default connect(mapStateToProps)(CardView);"]},"metadata":{},"sourceType":"module"}