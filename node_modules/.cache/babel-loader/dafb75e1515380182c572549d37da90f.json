{"ast":null,"code":"import _classCallCheck from\"/Users/graj/projects/Personal-Task-Manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/graj/projects/Personal-Task-Manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/graj/projects/Personal-Task-Manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/graj/projects/Personal-Task-Manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import\"../styles/Board.css\";import React,{Component}from\"react\";import{connect}from\"react-redux\";import{DragDropContext,Droppable}from\"react-beautiful-dnd\";import AddList from\"./AddList\";import List from\"./List\";var Board=/*#__PURE__*/function(_Component){_inherits(Board,_Component);var _super=_createSuper(Board);function Board(){var _this;_classCallCheck(this,Board);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={addingList:false};_this.toggleAddingList=function(){return _this.setState({addingList:!_this.state.addingList});};_this.handleDragEnd=function(_ref){var source=_ref.source,destination=_ref.destination,type=_ref.type;// dropped outside the allowed zones\nif(!destination)return;var dispatch=_this.props.dispatch;// Move list\nif(type===\"COLUMN\"){// Prevent update if nothing has changed\nif(source.index!==destination.index){dispatch({type:\"MOVE_LIST\",payload:{oldListIndex:source.index,newListIndex:destination.index}});}return;}if(source.index!==destination.index||source.droppableId!==destination.droppableId){dispatch({type:\"MOVE_CARD\",payload:{sourceListId:source.droppableId,destListId:destination.droppableId,oldCardIndex:source.index,newCardIndex:destination.index}});}};return _this;}_createClass(Board,[{key:\"render\",value:function render(){var _this2=this;var board=this.props.board;var addingList=this.state.addingList;return/*#__PURE__*/React.createElement(DragDropContext,{onDragEnd:this.handleDragEnd},/*#__PURE__*/React.createElement(Droppable,{droppableId:\"board\",direction:\"horizontal\",type:\"COLUMN\"},function(provided,_snapshot){return/*#__PURE__*/React.createElement(\"div\",{className:\"Board\",ref:provided.innerRef},board.lists.map(function(listId,index){return/*#__PURE__*/React.createElement(List,{listId:listId,key:listId,index:index});}),provided.placeholder,/*#__PURE__*/React.createElement(\"div\",{className:\"Add-List\"},addingList?/*#__PURE__*/React.createElement(AddList,{toggleAddingList:_this2.toggleAddingList}):/*#__PURE__*/React.createElement(\"div\",{onClick:_this2.toggleAddingList,className:\"Add-List-Button\"},/*#__PURE__*/React.createElement(\"ion-icon\",{name:\"add\"}),\" Add a list\")));}));}}]);return Board;}(Component);var mapStateToProps=function mapStateToProps(state){return{board:state.board};};export default connect(mapStateToProps)(Board);","map":{"version":3,"sources":["/Users/graj/projects/Personal-Task-Manager/src/components/Board.js"],"names":["React","Component","connect","DragDropContext","Droppable","AddList","List","Board","state","addingList","toggleAddingList","setState","handleDragEnd","source","destination","type","dispatch","props","index","payload","oldListIndex","newListIndex","droppableId","sourceListId","destListId","oldCardIndex","newCardIndex","board","provided","_snapshot","innerRef","lists","map","listId","placeholder","mapStateToProps"],"mappings":"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","sourcesContent":["import \"../styles/Board.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport AddList from \"./AddList\";\nimport List from \"./List\";\n\nclass Board extends Component {\n    state = {\n        addingList: false\n      };\n      \n    toggleAddingList = () =>\n        this.setState({ addingList: !this.state.addingList });\n\n    //Handle during dropping the card or list on another position via two dispatcher method movelist and movecards\n    handleDragEnd = ({ source, destination, type }) => {\n            // dropped outside the allowed zones\n            if (!destination) return;\n          \n            const { dispatch } = this.props;\n          \n            // Move list\n            if (type === \"COLUMN\") {\n              // Prevent update if nothing has changed\n              if (source.index !== destination.index) {\n                dispatch({\n                  type: \"MOVE_LIST\",\n                  payload: {\n                    oldListIndex: source.index,\n                    newListIndex: destination.index\n                  }\n                });\n              }\n              return;\n            }\n            if (source.index !== destination.index ||\n                source.droppableId !== destination.droppableId) {\n                dispatch({\n                  type: \"MOVE_CARD\",\n                  payload: {\n                    sourceListId: source.droppableId,\n                    destListId: destination.droppableId,\n                    oldCardIndex: source.index,\n                    newCardIndex: destination.index\n                  }\n                });\n            }\n     };\n    \n\n  render() {\n    const { board } = this.props;\n    const { addingList } = this.state;\n\n    return (\n        <DragDropContext onDragEnd={this.handleDragEnd}>\n        <Droppable droppableId=\"board\" direction=\"horizontal\" type=\"COLUMN\">\n          {(provided, _snapshot) => (\n            <div className=\"Board\" ref={provided.innerRef}>\n              {board.lists.map((listId, index) => {\n                return <List listId={listId} key={listId} index={index} />;\n              })}\n  \n              {provided.placeholder}\n  \n              <div className=\"Add-List\">\n                {addingList ? (\n                  <AddList toggleAddingList={this.toggleAddingList} />\n                ) : (\n                  <div\n                    onClick={this.toggleAddingList}\n                    className=\"Add-List-Button\"\n                  >\n                    <ion-icon name=\"add\" /> Add a list\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({ board: state.board });\n\nexport default connect(mapStateToProps)(Board);"]},"metadata":{},"sourceType":"module"}