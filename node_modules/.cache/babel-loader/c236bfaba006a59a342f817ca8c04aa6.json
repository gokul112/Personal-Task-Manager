{"ast":null,"code":"import _objectWithoutProperties from\"/Users/graj/projects/Personal-Task-Manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _toPropertyKey from\"/Users/graj/projects/Personal-Task-Manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toPropertyKey\";import _defineProperty from\"/Users/graj/projects/Personal-Task-Manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/graj/projects/Personal-Task-Manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/graj/projects/Personal-Task-Manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"/Users/graj/projects/Personal-Task-Manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{combineReducers,createStore}from\"redux\";import throttle from\"lodash.throttle\";import data from\"./data\";var board=function board(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{lists:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"ADD_LIST\":{var listId=action.payload.listId;return{lists:[].concat(_toConsumableArray(state.lists),[listId])};}case\"MOVE_LIST\":{var _action$payload=action.payload,oldListIndex=_action$payload.oldListIndex,newListIndex=_action$payload.newListIndex;var newLists=Array.from(state.lists);var _newLists$splice=newLists.splice(oldListIndex,1),_newLists$splice2=_slicedToArray(_newLists$splice,1),removedList=_newLists$splice2[0];newLists.splice(newListIndex,0,removedList);return{lists:newLists};}case\"DELETE_LIST\":{var _listId=action.payload.listId;var filterDeleted=function filterDeleted(tmpListId){return tmpListId!==_listId;};var _newLists=state.lists.filter(filterDeleted);return{lists:_newLists};}default:return state;}};var listsById=function listsById(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"ADD_LIST\":{var _action$payload2=action.payload,listId=_action$payload2.listId,listTitle=_action$payload2.listTitle;return _objectSpread(_objectSpread({},state),{},_defineProperty({},listId,{id:listId,title:listTitle,cards:[]}));}case\"CHANGE_LIST_TITLE\":{var _action$payload3=action.payload,_listId2=_action$payload3.listId,_listTitle=_action$payload3.listTitle;return _objectSpread(_objectSpread({},state),{},_defineProperty({},_listId2,_objectSpread(_objectSpread({},state[_listId2]),{},{title:_listTitle})));}case\"DELETE_LIST\":{var _listId3=action.payload.listId;var deletedList=state[_listId3],restOfLists=_objectWithoutProperties(state,[_listId3].map(_toPropertyKey));return restOfLists;}case\"ADD_CARD\":{var _action$payload4=action.payload,_listId4=_action$payload4.listId,cardId=_action$payload4.cardId;return _objectSpread(_objectSpread({},state),{},_defineProperty({},_listId4,_objectSpread(_objectSpread({},state[_listId4]),{},{cards:[].concat(_toConsumableArray(state[_listId4].cards),[cardId])})));}case\"MOVE_CARD\":{var _objectSpread6;var _action$payload5=action.payload,oldCardIndex=_action$payload5.oldCardIndex,newCardIndex=_action$payload5.newCardIndex,sourceListId=_action$payload5.sourceListId,destListId=_action$payload5.destListId;// Move within the same list\nif(sourceListId===destListId){var newCards=Array.from(state[sourceListId].cards);var _newCards$splice=newCards.splice(oldCardIndex,1),_newCards$splice2=_slicedToArray(_newCards$splice,1),_removedCard=_newCards$splice2[0];newCards.splice(newCardIndex,0,_removedCard);return _objectSpread(_objectSpread({},state),{},_defineProperty({},sourceListId,_objectSpread(_objectSpread({},state[sourceListId]),{},{cards:newCards})));}// Move card from one list to another\nvar sourceCards=Array.from(state[sourceListId].cards);var _sourceCards$splice=sourceCards.splice(oldCardIndex,1),_sourceCards$splice2=_slicedToArray(_sourceCards$splice,1),removedCard=_sourceCards$splice2[0];var destinationCards=Array.from(state[destListId].cards);destinationCards.splice(newCardIndex,0,removedCard);return _objectSpread(_objectSpread({},state),{},(_objectSpread6={},_defineProperty(_objectSpread6,sourceListId,_objectSpread(_objectSpread({},state[sourceListId]),{},{cards:sourceCards})),_defineProperty(_objectSpread6,destListId,_objectSpread(_objectSpread({},state[destListId]),{},{cards:destinationCards})),_objectSpread6));}case\"DELETE_CARD\":{var _action$payload6=action.payload,deletedCardId=_action$payload6.cardId,_listId5=_action$payload6.listId;var filterDeleted=function filterDeleted(cardId){return cardId!==deletedCardId;};return _objectSpread(_objectSpread({},state),{},_defineProperty({},_listId5,_objectSpread(_objectSpread({},state[_listId5]),{},{cards:state[_listId5].cards.filter(filterDeleted)})));}default:return state;}};var cardsById=function cardsById(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"ADD_CARD\":{var _action$payload7=action.payload,cardText=_action$payload7.cardText,cardId=_action$payload7.cardId;return _objectSpread(_objectSpread({},state),{},_defineProperty({},cardId,{text:cardText,id:cardId,comment:[]}));}case\"CHANGE_CARD_TEXT\":{var _action$payload8=action.payload,_cardText=_action$payload8.cardText,_cardId=_action$payload8.cardId;return _objectSpread(_objectSpread({},state),{},_defineProperty({},_cardId,_objectSpread(_objectSpread({},state[_cardId]),{},{text:_cardText})));}case\"ADD_COMMENT_TO_CARD\":{var _action$payload9=action.payload,comment=_action$payload9.comment,_cardId2=_action$payload9.cardId;return _objectSpread(_objectSpread({},state),{},_defineProperty({},_cardId2,_objectSpread(_objectSpread({},state[_cardId2]),{},{comment:[].concat(_toConsumableArray(state[_cardId2].comment),[comment])})));}case\"DELETE_COMMENT\":{var _cardId3=action.payload.cardId;return _objectSpread(_objectSpread({},state),{},_defineProperty({},_cardId3,_objectSpread(_objectSpread({},state[_cardId3]),{},{comment:[]})));}case\"DELETE_CARD\":{var _cardId4=action.payload.cardId;var deletedCard=state[_cardId4],restOfCards=_objectWithoutProperties(state,[_cardId4].map(_toPropertyKey));return restOfCards;}// Find every card from the deleted list and remove it\ncase\"DELETE_LIST\":{var cardIds=action.payload.cards;return Object.keys(state).filter(function(cardId){return!cardIds.includes(cardId);}).reduce(function(newState,cardId){return _objectSpread(_objectSpread({},newState),{},_defineProperty({},cardId,state[cardId]));},{});}default:return state;}};var reducers=combineReducers({board:board,listsById:listsById,cardsById:cardsById});var saveState=function saveState(state){try{var stateData=JSON.stringify(state);localStorage.setItem(\"state\",stateData);}catch(_unused){// ignore write errors\n}};var loadState=function loadState(){try{var stateData=localStorage.getItem(\"state\");if(stateData===null){return undefined;}return JSON.parse(stateData);}catch(err){return undefined;}};var savedState=loadState();var store=createStore(reducers,savedState);store.subscribe(throttle(function(){saveState(store.getState());},1000));console.log(store.getState());if(!store.getState().board.lists.length){console.log(\"data feed\");data(store);}export default store;","map":{"version":3,"sources":["/Users/graj/projects/Personal-Task-Manager/src/store.js"],"names":["combineReducers","createStore","throttle","data","board","state","lists","action","type","listId","payload","oldListIndex","newListIndex","newLists","Array","from","splice","removedList","filterDeleted","tmpListId","filter","listsById","listTitle","id","title","cards","deletedList","restOfLists","cardId","oldCardIndex","newCardIndex","sourceListId","destListId","newCards","removedCard","sourceCards","destinationCards","deletedCardId","cardsById","cardText","text","comment","deletedCard","restOfCards","cardIds","Object","keys","includes","reduce","newState","reducers","saveState","stateData","JSON","stringify","localStorage","setItem","loadState","getItem","undefined","parse","err","savedState","store","subscribe","getState","console","log","length"],"mappings":"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","sourcesContent":["import { combineReducers, createStore } from \"redux\";\nimport throttle from \"lodash.throttle\";\nimport data from \"./data\";\n\nconst board = (state = { lists: [] }, action) => {\n    switch (action.type) {\n      case \"ADD_LIST\": {\n        const { listId } = action.payload;\n        return { lists: [...state.lists, listId] };\n      }\n      case \"MOVE_LIST\": {\n        const { oldListIndex, newListIndex } = action.payload;\n        const newLists = Array.from(state.lists);\n        const [removedList] = newLists.splice(oldListIndex, 1);\n        newLists.splice(newListIndex, 0, removedList);\n        return { lists: newLists };\n      }\n      case \"DELETE_LIST\": {\n        const { listId } = action.payload;\n        const filterDeleted = tmpListId => tmpListId !== listId;\n        const newLists = state.lists.filter(filterDeleted);\n        return { lists: newLists };\n      }\n      default:\n        return state;\n    }\n  };\n\n  const listsById = (state = {}, action) => {\n    switch (action.type) {\n      case \"ADD_LIST\": {\n        const { listId, listTitle } = action.payload;\n        return {\n          ...state,\n          [listId]: { id: listId, title: listTitle, cards: []}\n        };\n      }\n      case \"CHANGE_LIST_TITLE\": {\n        const { listId, listTitle } = action.payload;\n        return {\n          ...state,\n          [listId]: { ...state[listId], title: listTitle }\n        };\n      }\n      case \"DELETE_LIST\": {\n        const { listId } = action.payload;\n        const { [listId]: deletedList, ...restOfLists } = state;\n        return restOfLists;\n      }\n      case \"ADD_CARD\": {\n        const { listId, cardId } = action.payload;\n        return {\n          ...state,\n          [listId]: { ...state[listId], cards: [...state[listId].cards, cardId] }\n        };\n      }\n      case \"MOVE_CARD\": {\n        const {\n          oldCardIndex,\n          newCardIndex,\n          sourceListId,\n          destListId\n        } = action.payload;\n        // Move within the same list\n        if (sourceListId === destListId) {\n          const newCards = Array.from(state[sourceListId].cards);\n          const [removedCard] = newCards.splice(oldCardIndex, 1);\n          newCards.splice(newCardIndex, 0, removedCard);\n          return {\n            ...state,\n            [sourceListId]: { ...state[sourceListId], cards: newCards }\n          };\n        }\n        // Move card from one list to another\n        const sourceCards = Array.from(state[sourceListId].cards);\n        const [removedCard] = sourceCards.splice(oldCardIndex, 1);\n        const destinationCards = Array.from(state[destListId].cards);\n        destinationCards.splice(newCardIndex, 0, removedCard);\n        return {\n          ...state,\n          [sourceListId]: { ...state[sourceListId], cards: sourceCards },\n          [destListId]: { ...state[destListId], cards: destinationCards }\n        };\n      }\n      case \"DELETE_CARD\": {\n        const { cardId: deletedCardId, listId } = action.payload;\n        const filterDeleted = cardId => cardId !== deletedCardId;\n        return {\n            ...state,\n            [listId]: {\n              ...state[listId],\n              cards: state[listId].cards.filter(filterDeleted)\n            }\n        };\n      }\n      default:\n        return state;\n    }\n  };\n\n\n  const cardsById = (state = {}, action) => {\n    switch (action.type) {\n      case \"ADD_CARD\": {\n        const { cardText, cardId } = action.payload;\n        return { ...state, [cardId]: { text: cardText, id: cardId, comment:[] } };\n      }\n      case \"CHANGE_CARD_TEXT\": {\n        const { cardText, cardId } = action.payload;\n        return { ...state, [cardId]: { ...state[cardId], text: cardText } };\n      }\n      case \"ADD_COMMENT_TO_CARD\": {\n        const { comment, cardId } = action.payload;\n        return { ...state, [cardId]: { ...state[cardId], comment:[...state[cardId].comment,comment]}};\n      }\n      case \"DELETE_COMMENT\": {\n        const { cardId } = action.payload;\n        return { ...state, [cardId]: { ...state[cardId], comment:[]}};\n      }\n      case \"DELETE_CARD\": {\n        const { cardId } = action.payload;\n        const { [cardId]: deletedCard, ...restOfCards } = state;\n        return restOfCards;\n      }\n      // Find every card from the deleted list and remove it\n      case \"DELETE_LIST\": {\n        const { cards: cardIds } = action.payload;\n        return Object.keys(state)\n          .filter(cardId => !cardIds.includes(cardId))\n          .reduce(\n            (newState, cardId) => ({ ...newState, [cardId]: state[cardId] }),\n            {}\n          );\n      }\n      default:\n        return state;\n    }\n  };\n\n\nconst reducers = combineReducers({\n    board,\n    listsById,\n    cardsById\n});\n\nconst saveState = state => {\n    try {\n      const stateData = JSON.stringify(state);\n      localStorage.setItem(\"state\", stateData);\n    } catch {\n      // ignore write errors\n    }\n};\n\nconst loadState = () => {\n    try {\n      const stateData = localStorage.getItem(\"state\");\n      if (stateData === null) {\n        return undefined;\n      }\n      return JSON.parse(stateData);\n    } catch (err) {\n      return undefined;\n    }\n};\n\nconst savedState = loadState();\nconst store = createStore(reducers, savedState);\n\nstore.subscribe(\n  throttle(() => {\n    saveState(store.getState());\n  }, 1000)\n);\n\nconsole.log(store.getState());\nif (!store.getState().board.lists.length) {\n  console.log(\"data feed\");\n  data(store);\n}\n\nexport default store;\n\n\n\n"]},"metadata":{},"sourceType":"module"}