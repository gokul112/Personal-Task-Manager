{"ast":null,"code":"import _regeneratorRuntime from\"/Users/graj/projects/Personal-Task-Manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/graj/projects/Personal-Task-Manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/graj/projects/Personal-Task-Manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/graj/projects/Personal-Task-Manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/graj/projects/Personal-Task-Manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/graj/projects/Personal-Task-Manager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import Modal from\"react-modal\";import{connect}from\"react-redux\";import shortid from\"shortid\";import EditButtons from\"./EditButtons\";var customStyles={content:{top:'50%',left:'50%',right:'50%',bottom:'auto',marginRight:'-50%',transform:'translate(-50%, -50%)'}};Modal.setAppElement('#root');var CardView=/*#__PURE__*/function(_Component){_inherits(CardView,_Component);var _super=_createSuper(CardView);function CardView(){var _this;_classCallCheck(this,CardView);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={comments:[]};_this.handleChangeText=function(event){return _this.setState({comments:event.target.value});};_this.addComment=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(Comment){var _this$props,item,dispatch,comments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this$props=_this.props,item=_this$props.item,dispatch=_this$props.dispatch;comments=_this.state.comments;dispatch({type:\"ADD_COMMENT_TO_CARD\",payload:{comment:comments,cardId:item.id}});_this.setState({comments:[]});case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.deleteComment=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _this$props2,item,dispatch;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_this$props2=_this.props,item=_this$props2.item,dispatch=_this$props2.dispatch;dispatch({type:\"DELETE_COMMENT\",payload:{cardId:item.id}});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return _this;}_createClass(CardView,[{key:\"render\",//Renders the modal\nvalue:function render(){var _this2=this;var comments=this.state.comments;var _this$props3=this.props,show=_this$props3.show,onClose=_this$props3.onClose,item=_this$props3.item,deleteCard=_this$props3.deleteCard;return/*#__PURE__*/React.createElement(Modal,{isOpen:show,onRequestClose:onClose,style:customStyles,overlayClassName:\"overlay\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"pull-right\",onClick:onClose},\"X\"),/*#__PURE__*/React.createElement(\"h1\",{style:{flex:\"1 90%\"}},item.text),/*#__PURE__*/React.createElement(\"div\",{className:\"pull-right\"},/*#__PURE__*/React.createElement(EditButtons,{handleDelete:function handleDelete(){return deleteCard();},handleComment:\"Card\"}))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"Comments\"},\"Comments\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"form-control\",id:\"Comments\",rows:\"3\",value:comments,onChange:this.handleChangeText})),/*#__PURE__*/React.createElement(EditButtons,{handleSave:function handleSave(){return _this2.addComment(comments);},saveLabel:\"Add Comment\",handleDelete:function handleDelete(){return _this2.deleteComment();},handleComment:\"Comments\"}),/*#__PURE__*/React.createElement(\"h2\",null,\"Previous Comments\"),item.comment&&item.comment.map(function(value){return/*#__PURE__*/React.createElement(\"div\",{key:shortid.generate()},value);})));}}]);return CardView;}(Component);var mapStateToProps=function mapStateToProps(state,ownProps){return{card:state.cardsById[ownProps.cardId]};};export default connect(mapStateToProps)(CardView);","map":{"version":3,"sources":["/Users/graj/projects/Personal-Task-Manager/src/components/CardView.js"],"names":["React","Component","Modal","connect","shortid","EditButtons","customStyles","content","top","left","right","bottom","marginRight","transform","setAppElement","CardView","state","comments","handleChangeText","event","setState","target","value","addComment","Comment","props","item","dispatch","type","payload","comment","cardId","id","deleteComment","show","onClose","deleteCard","flex","text","map","generate","mapStateToProps","ownProps","card","cardsById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Modal from \"react-modal\";\nimport { connect } from \"react-redux\";\nimport shortid from \"shortid\";\nimport EditButtons from \"./EditButtons\";\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : '50%',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n  };\n\nModal.setAppElement('#root')\n\n\nclass CardView extends Component {\n\n    state = {\n        comments:[]\n    }\n\n//Set state value when user changes in text box\nhandleChangeText = event => this.setState({ comments: event.target.value });\n\n//Add Comments to the Card selected using dispatcher method and update the store.\n addComment = async Comment => {\n        const { item, dispatch } = this.props;\n        const {comments} = this.state;\n      \n        dispatch({\n          type: \"ADD_COMMENT_TO_CARD\",\n          payload: { comment:comments, cardId:item.id }\n        });\n        this.setState({comments:[]})\n};\n\n//Delete All Comments respective to the card selected by using dispatcher method\ndeleteComment = async () => {\n        const {  item, dispatch } = this.props;\n      \n        dispatch({\n          type: \"DELETE_COMMENT\",\n          payload: { cardId: item.id }\n        });\n};\n    \n//Renders the modal\nrender() {\n    const {comments} = this.state;\n    const { show, onClose, item, deleteCard } = this.props;\n    \n    return (\n            <Modal\n                isOpen={show}\n                onRequestClose={onClose}\n                style={customStyles}\n                overlayClassName={\"overlay\"}\n            >\n                        <div>\n                            <button className=\"pull-right\" onClick={onClose}>X</button>\n                            <h1 style={{ flex: \"1 90%\" }}>{item.text}</h1>\n                            <div className=\"pull-right\">\n                                <EditButtons\n                                    handleDelete={() => deleteCard()}\n                                    handleComment=\"Card\"\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Comments\">Comments</label>\n                                <textarea className=\"form-control\" id=\"Comments\" rows=\"3\" value={comments}\n                                onChange={this.handleChangeText}></textarea>\n                            </div>\n                            <EditButtons\n                                handleSave={() => this.addComment(comments)}\n                                saveLabel=\"Add Comment\"\n                                handleDelete={() => this.deleteComment()}\n                                handleComment=\"Comments\"\n                            />\n                            <h2>Previous Comments</h2>\n                            {item.comment && item.comment.map((value)=>\n                                <div key={shortid.generate()}>{value}</div>\n                            )}\n                        </div>\n            </Modal>\n                );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    card: state.cardsById[ownProps.cardId]\n  });\n  \nexport default connect(mapStateToProps)(CardView);"]},"metadata":{},"sourceType":"module"}