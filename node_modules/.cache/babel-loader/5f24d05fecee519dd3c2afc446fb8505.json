{"ast":null,"code":"var _jsxFileName = \"/Users/graj/projects/task_board/task_board/src/components/List.js\";\nimport \"../styles/List.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Card from \"./Card\";\nimport CardEditor from \"./CardEditor\";\nimport shortid from \"shortid\";\nimport ListEditor from \"./ListEditor\";\n\nclass List extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editingTitle: false,\n      title: this.props.list.title,\n      addingCard: false\n    };\n\n    this.toggleAddingCard = () => this.setState({\n      addingCard: !this.state.addingCard\n    });\n\n    this.addCard = async cardText => {\n      const {\n        listId,\n        dispatch\n      } = this.props;\n      this.toggleAddingCard();\n      const cardId = shortid.generate();\n      dispatch({\n        type: \"ADD_CARD\",\n        payload: {\n          cardText,\n          cardId,\n          listId\n        }\n      });\n    };\n\n    this.toggleEditingTitle = () => this.setState({\n      editingTitle: !this.state.editingTitle\n    });\n\n    this.handleChangeTitle = e => this.setState({\n      title: e.target.value\n    });\n\n    this.editListTitle = async () => {\n      const {\n        listId,\n        dispatch\n      } = this.props;\n      const {\n        title\n      } = this.state;\n      this.toggleEditingTitle();\n      dispatch({\n        type: \"CHANGE_LIST_TITLE\",\n        payload: {\n          listId,\n          listTitle: title\n        }\n      });\n    };\n\n    this.deleteList = async () => {\n      const {\n        listId,\n        list,\n        dispatch\n      } = this.props;\n      dispatch({\n        type: \"DELETE_LIST\",\n        payload: {\n          listId,\n          cards: list.cards\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      list\n    } = this.props;\n    const {\n      editingTitle,\n      addingCard,\n      title\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"List\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, editingTitle ? /*#__PURE__*/React.createElement(ListEditor, {\n      list: list,\n      title: title,\n      handleChangeTitle: this.handleChangeTitle,\n      saveList: this.editListTitle,\n      onClickOutside: this.editListTitle,\n      deleteList: this.deleteList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"List-Title\",\n      onClick: this.toggleEditingTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, list.title), addingCard ? /*#__PURE__*/React.createElement(CardEditor, {\n      onSave: this.addCard,\n      onCancel: this.toggleAddingCard,\n      adding: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Toggle-Add-Card\",\n      onClick: this.toggleAddingCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ion-icon\", {\n      name: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }), \" Add a card\"), list.cards && list.cards.map((cardId, index) => /*#__PURE__*/React.createElement(Card, {\n      key: cardId,\n      cardId: cardId,\n      index: index,\n      listId: list.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  list: state.listsById[ownProps.listId]\n});\n\nexport default connect(mapStateToProps)(List);","map":{"version":3,"sources":["/Users/graj/projects/task_board/task_board/src/components/List.js"],"names":["React","Component","connect","Card","CardEditor","shortid","ListEditor","List","state","editingTitle","title","props","list","addingCard","toggleAddingCard","setState","addCard","cardText","listId","dispatch","cardId","generate","type","payload","toggleEditingTitle","handleChangeTitle","e","target","value","editListTitle","listTitle","deleteList","cards","render","map","index","id","mapStateToProps","ownProps","listsById"],"mappings":"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","sourcesContent":["import \"../styles/List.css\";\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Card from \"./Card\";\nimport CardEditor from \"./CardEditor\";\nimport shortid from \"shortid\";\nimport ListEditor from \"./ListEditor\";\n\n\nclass List extends Component {\n      state = {\n        editingTitle: false,\n        title: this.props.list.title,\n        addingCard: false\n      };\n      \n      toggleAddingCard = () =>\n        this.setState({ addingCard: !this.state.addingCard });\n      \n      addCard = async cardText => {\n        const { listId, dispatch } = this.props;\n      \n        this.toggleAddingCard();\n      \n        const cardId = shortid.generate();\n      \n        dispatch({\n          type: \"ADD_CARD\",\n          payload: { cardText, cardId, listId }\n        });\n      };\n    \n      toggleEditingTitle = () =>\n      this.setState({ editingTitle: !this.state.editingTitle });\n    \n    handleChangeTitle = e => this.setState({ title: e.target.value });\n    \n    editListTitle = async () => {\n      const { listId, dispatch } = this.props;\n      const { title } = this.state;\n    \n      this.toggleEditingTitle();\n    \n      dispatch({\n        type: \"CHANGE_LIST_TITLE\",\n        payload: { listId, listTitle: title }\n      });\n    };\n    \n    deleteList = async () => {\n      const { listId, list, dispatch } = this.props;\n    \n      dispatch({\n        type: \"DELETE_LIST\",\n        payload: { listId, cards: list.cards }\n      });\n    };\n\n  render() {\n    const { list } = this.props;\n    const { editingTitle, addingCard, title } = this.state;\n\n    return (\n    \n\n      <div className=\"List\">\n        {editingTitle ? (\n            <ListEditor\n            list={list}\n            title={title}\n            handleChangeTitle={this.handleChangeTitle}\n            saveList={this.editListTitle}\n            onClickOutside={this.editListTitle}\n            deleteList={this.deleteList}\n            />\n        ) : (\n            <div className=\"List-Title\" onClick={this.toggleEditingTitle}>\n            {list.title}\n            </div>\n        )}\n       \n        {addingCard ? (\n            <CardEditor\n            onSave={this.addCard}\n            onCancel={this.toggleAddingCard}\n            adding\n            />\n        ) : (\n            <div className=\"Toggle-Add-Card\" onClick={this.toggleAddingCard}>\n            <ion-icon name=\"add\" /> Add a card\n            </div>\n        )}\n\n        {list.cards &&\n          list.cards.map((cardId, index) => (\n            <Card\n              key={cardId}\n              cardId={cardId}\n              index={index}\n              listId={list.id}\n            />\n          ))}\n\n        \n        \n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  list: state.listsById[ownProps.listId]\n});\n\nexport default connect(mapStateToProps)(List);"]},"metadata":{},"sourceType":"module"}