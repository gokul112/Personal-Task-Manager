{"version":3,"sources":["components/ListEditor.js","components/EditButtons.js","components/AddList.js","components/CardEditor.js","components/CardView.js","components/Card.js","components/List.js","components/Board.js","components/App.js","serviceWorker.js","store.js","data.js","index.js"],"names":["ListEditor","ref","React","createRef","onEnter","e","keyCode","preventDefault","props","saveList","handleClick","current","contains","target","onClickOutside","document","addEventListener","this","removeEventListener","title","handleChangeTitle","deleteList","className","autoFocus","placeholder","value","onChange","onKeyDown","style","width","name","onClick","Component","EditButtons","handleSave","saveLabel","handleDelete","handleCancel","handleComment","tabIndex","AddList","state","setState","createList","a","dispatch","toggleAddingList","type","payload","listId","shortid","generate","listTitle","connect","CardEditor","text","handleChangeText","event","onSave","onCancel","onDelete","adding","onOpen","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","CardView","comments","addComment","Comment","item","comment","cardId","id","deleteComment","show","onClose","deleteCard","isOpen","onRequestClose","overlayClassName","flex","htmlFor","rows","map","key","ownProps","card","cardsById","Card","hover","editing","startHover","endHover","startEditing","endEditing","editCard","cardText","stopPropagation","index","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","onMouseEnter","onMouseLeave","List","editingTitle","list","addingCard","toggleAddingCard","addCard","toggleEditingTitle","editListTitle","cards","droppableId","_snapshot","listsById","Board","addingList","handleDragEnd","source","destination","sourceListId","destListId","oldCardIndex","newCardIndex","oldListIndex","newListIndex","board","onDragEnd","direction","lists","App","Boolean","window","location","hostname","match","reducers","combineReducers","action","newLists","Array","from","splice","removedList","filterDeleted","tmpListId","filter","restOfLists","newCards","removedCard","sourceCards","destinationCards","deletedCardId","restOfCards","cardIds","Object","keys","includes","reduce","newState","savedState","stateData","localStorage","getItem","JSON","parse","err","loadState","store","createStore","subscribe","throttle","stringify","setItem","saveState","getState","console","log","length","firstListId","secondListId","data","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2b257287.chunk.js","sourcesContent":["import \"../styles/ListEditor.css\";\n\nimport React, { Component } from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nclass ListEditor extends Component {\n  ref = React.createRef();\n\n  //Saves on the enter key \n  onEnter = e => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.props.saveList();\n    }\n  };\n\n  handleClick = e => {\n    const node = this.ref.current;\n\n    if (node.contains(e.target)) {\n      return;\n    }\n\n    this.props.onClickOutside();\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"click\", this.handleClick, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"click\", this.handleClick, false);\n  }\n\n  render() {\n    const { title, handleChangeTitle, deleteList } = this.props;\n\n    return (\n      <div className=\"List-Title-Edit\" ref={this.ref}>\n        <TextareaAutosize\n          autoFocus\n          className=\"List-Title-Textarea\"\n          placeholder=\"Enter list title...\"\n          value={title}\n          onChange={handleChangeTitle}\n          onKeyDown={this.onEnter}\n          style={{ width: deleteList ? 220 : 245 }}\n        />\n        {deleteList && <ion-icon name=\"trash\" onClick={deleteList} />}\n      </div>\n    );\n  }\n}\n\nexport default ListEditor;","import \"../styles/EditButtons.css\";\nimport React from \"react\";\n\nconst EditButtons = ({ handleSave, saveLabel, handleDelete, handleCancel, handleComment }) => (\n  \n  <div className=\"Edit-Buttons\">\n    {handleSave && (<div\n      tabIndex=\"0\"\n      className=\"Edit-Button save\"\n      onClick={handleSave}\n    >\n      {saveLabel}\n    </div>)}\n\n    {handleDelete && (\n      <div\n        tabIndex=\"0\"\n        className=\"Edit-Button delete\"\n        onClick={handleDelete}\n      >\n        Delete {handleComment}\n      </div>\n    )}\n\n    {handleCancel && (<div tabIndex=\"0\" className=\"Edit-Button-Cancel\" onClick={handleCancel}>\n      <ion-icon name=\"close\" />\n    </div>)}\n  </div>\n);\n\nexport default EditButtons;","import \"../styles/AddList.css\";\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListEditor from \"./ListEditor\";\nimport shortid from \"shortid\";\nimport EditButtons from \"./EditButtons\";\n\nclass AddList extends Component {\n  state = {\n    title: \"\"\n  };\n  //Gets the title value from text box and updates it to state value\n  handleChangeTitle = e => this.setState({ title: e.target.value });\n  //Creates a new list using addlist dispatcher method\n  createList = async () => {\n    const { title } = this.state;\n    const { dispatch } = this.props;\n    this.props.toggleAddingList();\n    dispatch({\n      type: \"ADD_LIST\",\n      payload: { listId: shortid.generate(), listTitle: title }\n    });\n  };\n\n  render() {\n    const { toggleAddingList } = this.props;\n    const { title } = this.state;\n\n    return (\n      <div className=\"Add-List-Editor\">\n        <ListEditor\n          title={title}\n          handleChangeTitle={this.handleChangeTitle}\n          onClickOutside={toggleAddingList}\n          saveList={this.createList}\n        />\n\n        <EditButtons\n          handleSave={this.createList}\n          saveLabel={\"Add list\"}\n          handleCancel={toggleAddingList}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect()(AddList);","import \"../styles/CardEditor.css\";\nimport React, { Component } from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport EditButtons from \"./EditButtons\";\n\nclass CardEditor extends Component {\n  state = {\n    text: this.props.text || \"\"\n  };\n\n  //Changes the text value as user types in and sets to state value\n  handleChangeText = event => this.setState({ text: event.target.value });\n\n  //On typing enter from keyboard saves the value\n  onEnter = e => {\n    const { text } = this.state;\n\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.props.onSave(text);\n    }\n  };\n\n  render() {\n    const { text } = this.state;\n    const { onSave, onCancel, onDelete, adding } = this.props;\n\n    return (\n      <div className=\"Edit-Card\">\n        <div className=\"Card\" onClick={this.onOpen}>\n          <TextareaAutosize\n            autoFocus\n            className=\"Edit-Card-Textarea\"\n            placeholder=\"Enter the Title/Description for this card...\"\n            value={text}\n            onChange={this.handleChangeText}\n            onKeyDown={this.onEnter}\n          />\n        </div>\n        {/* Save and delete buttons will come from editbuttons Component */}\n        <EditButtons\n          handleSave={() => onSave(text)}\n          saveLabel={adding ? \"Add card\" : \"Save\"}\n          handleDelete={onDelete}\n          handleCancel={onCancel}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CardEditor;","import React, { Component } from \"react\";\nimport Modal from \"react-modal\";\nimport { connect } from \"react-redux\";\nimport shortid from \"shortid\";\nimport EditButtons from \"./EditButtons\";\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : '50%',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n  };\n\nModal.setAppElement('#root')\n\n\nclass CardView extends Component {\n\n    state = {\n        comments:[]\n    }\n\n//Set state value when user changes in text box\nhandleChangeText = event => this.setState({ comments: event.target.value });\n\n//Add Comments to the Card selected using dispatcher method and update the store.\n addComment = async Comment => {\n        const { item, dispatch } = this.props;\n        const {comments} = this.state;\n      \n        dispatch({\n          type: \"ADD_COMMENT_TO_CARD\",\n          payload: { comment:comments, cardId:item.id }\n        });\n        this.setState({comments:[]})\n};\n\n//Delete All Comments respective to the card selected by using dispatcher method\ndeleteComment = async () => {\n        const {  item, dispatch } = this.props;\n      \n        dispatch({\n          type: \"DELETE_COMMENT\",\n          payload: { cardId: item.id }\n        });\n};\n    \n//Renders the modal\nrender() {\n    const {comments} = this.state;\n    const { show, onClose, item, deleteCard } = this.props;\n    \n    return (\n            <Modal\n                isOpen={show}\n                onRequestClose={onClose}\n                style={customStyles}\n                overlayClassName={\"overlay\"}\n            >\n                        <div>\n                            <button className=\"pull-right\" onClick={onClose}>X</button>\n                            <h1 style={{ flex: \"1 90%\" }}>{item.text}</h1>\n                            <div className=\"pull-right\">\n                                <EditButtons\n                                    handleDelete={() => deleteCard()}\n                                    handleComment=\"Card\"\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Comments\">Comments</label>\n                                <textarea className=\"form-control\" id=\"Comments\" rows=\"3\" value={comments}\n                                onChange={this.handleChangeText}></textarea>\n                            </div>\n                            <EditButtons\n                                handleSave={() => this.addComment(comments)}\n                                saveLabel=\"Add Comment\"\n                                handleDelete={() => this.deleteComment()}\n                                handleComment=\"Comments\"\n                            />\n                            <h2>Previous Comments</h2>\n                            {item.comment && item.comment.map((value)=>\n                                <div key={shortid.generate()}>{value}</div>\n                            )}\n                        </div>\n            </Modal>\n                );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    card: state.cardsById[ownProps.cardId]\n  });\n  \nexport default connect(mapStateToProps)(CardView);","import \"../styles/Card.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport CardEditor from \"./CardEditor\";\nimport CardView from \"./CardView\";\n\nclass Card extends Component {\n\n  state = {\n    hover: false,\n    editing: false,\n    show: false\n  };\n  \n  //when hover edit button will be shown via hover boolen value\n  startHover = () => this.setState({ hover: true });\n  endHover = () => this.setState({ hover: false });\n\n  //While editing setting the boolean values to show correctly\n  startEditing = () =>\n    this.setState({\n      hover: false,\n      editing: true,\n      text: this.props.card.text\n    });\n  \n  //After editing updating the state values to identify it is not in editing state.\n  endEditing = () => this.setState({ hover: false, editing: false });\n  \n  //Edit the card text by calling dispatcher method by sending the cardid and text\n  editCard = async text => {\n    const { card, dispatch } = this.props;\n  \n    this.endEditing();\n  \n    dispatch({\n      type: \"CHANGE_CARD_TEXT\",\n      payload: { cardId: card.id, cardText: text }\n    });\n  };\n  \n  //Delete card by calling dispatcher method using id\n  deleteCard = async () => {\n    const { listId, card, dispatch } = this.props;\n  \n    dispatch({\n      type: \"DELETE_CARD\",\n      payload: { cardId: card.id, listId }\n    });\n  };\n\n  //Opens the modal and Updated the show value to identify the modal state. It shows the card description and comments can be added\n  onOpen = () => this.setState({show:true});\n\n  //Updating state value when modal is closed .\n  onClose = (e) =>{\n    e.stopPropagation();\n    this.setState({show:false});\n  }\n  \n\n  render() {\n      const { card, index, listId} = this.props;\n      const { hover, editing, show } = this.state;\n\n      if (!editing) {\n        return (\n          <Draggable draggableId={card.id} index={index}>\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              className=\"Card\"\n              onMouseEnter={this.startHover}\n              onMouseLeave={this.endHover}\n            >\n              {hover && (\n                <div className=\"Card-Icons\">\n                  <div className=\"Card-Icon\" onClick={this.startEditing}>\n                    <ion-icon name=\"create\" />\n                  </div>\n                </div>\n              )}\n            \n              <div onClick={this.onOpen}> {card.text}</div>\n\n              {show && (<CardView\n                    item={card}\n                    onClose={this.onClose}\n                    show={show}\n                    listId={listId}\n                    deleteCard={this.deleteCard}\n                />)}\n            </div>\n              \n          )}\n      \n        </Draggable>\n          \n        );\n      } else {\n        return (\n          <CardEditor\n            text={card.text}\n            onSave={this.editCard}\n            onDelete={this.deleteCard}\n            onCancel={this.endEditing}\n          />\n        );\n      }\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  card: state.cardsById[ownProps.cardId]\n});\n\nexport default connect(mapStateToProps)(Card);","import \"../styles/List.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport Card from \"./Card\";\nimport CardEditor from \"./CardEditor\";\nimport shortid from \"shortid\";\nimport ListEditor from \"./ListEditor\";\n\n\nclass List extends Component {\n      state = {\n        editingTitle: false,\n        title: this.props.list.title,\n        addingCard: false\n      };\n      \n//When Adding card cancelled\n toggleAddingCard = () =>\n        this.setState({ addingCard: !this.state.addingCard });\n      \n\n//Add card by calling dispatcher method\naddCard = async cardText => {\n        const { listId, dispatch } = this.props;\n      \n        this.toggleAddingCard();\n      \n        const cardId = shortid.generate();\n      \n        dispatch({\n          type: \"ADD_CARD\",\n          payload: { cardText, cardId, listId }\n        });\n};\n    \n\n//Toggle Editing title and sets editing title to true or false to identify the state\ntoggleEditingTitle = () =>\n      this.setState({ editingTitle: !this.state.editingTitle });\n\n\n//Sets the title value when user types\nhandleChangeTitle = e => this.setState({ title: e.target.value });\n    \n\n//Edit the list title (calling the change List title Dispatcher)\neditListTitle = async () => {\n      const { listId, dispatch } = this.props;\n      const { title } = this.state;\n    \n      this.toggleEditingTitle();\n    \n      dispatch({\n        type: \"CHANGE_LIST_TITLE\",\n        payload: { listId, listTitle: title }\n      });\n};\n    \n//Delete the list \n//Calling the delete Dispatcher method\ndeleteList = async () => {\n      const { listId, list, dispatch } = this.props;\n    \n      dispatch({\n        type: \"DELETE_LIST\",\n        payload: { listId, cards: list.cards }\n      });\n};\n\n  render() {\n    const { list, index } = this.props;\n    const { editingTitle, addingCard, title } = this.state;\n\n    return (\n        <Draggable draggableId={list.id} index={index}>\n        {(provided, snapshot) => (\n            <div\n                ref={provided.innerRef}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                className=\"List\"\n            >\n\n        <div className=\"List\">\n            {editingTitle ? (\n                <ListEditor\n                list={list}\n                title={title}\n                handleChangeTitle={this.handleChangeTitle}\n                saveList={this.editListTitle}\n                onClickOutside={this.editListTitle}\n                deleteList={this.deleteList}\n                />\n            ) : (\n                <div className=\"List-Title\" onClick={this.toggleEditingTitle}>\n                {list.title}\n                </div>\n            )}\n        \n            {addingCard ? (\n                <CardEditor\n                onSave={this.addCard}\n                onCancel={this.toggleAddingCard}\n                adding\n                />\n            ) : (\n                <div className=\"Toggle-Add-Card\" onClick={this.toggleAddingCard}>\n                <ion-icon name=\"add\" /> Add a card\n                </div>\n            )}\n\n            <Droppable droppableId={list.id}>\n            {(provided, _snapshot) => (\n                <div ref={provided.innerRef}>\n                {list.cards &&\n                    list.cards.map((cardId, index) => (\n                    <Card\n                        key={cardId}\n                        cardId={cardId}\n                        index={index}\n                        listId={list.id}\n                    />\n                    ))}\n\n                {provided.placeholder}\n                </div>\n            )}\n            </Droppable>\n            </div>\n        </div>\n     )}\n    </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  list: state.listsById[ownProps.listId]\n});\n\nexport default connect(mapStateToProps)(List);","import \"../styles/Board.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport AddList from \"./AddList\";\nimport List from \"./List\";\n\nclass Board extends Component {\n    state = {\n        addingList: false\n      };\n      \n    toggleAddingList = () =>\n        this.setState({ addingList: !this.state.addingList });\n\n    //Handle during dropping the card or list on another position via two dispatcher method movelist and movecards\n    handleDragEnd = ({ source, destination, type }) => {\n            // dropped outside the allowed zones\n            if (!destination) return;\n          \n            const { dispatch } = this.props;\n          \n            // Move list\n            if (type === \"COLUMN\") {\n              // Prevent update if nothing has changed\n              if (source.index !== destination.index) {\n                dispatch({\n                  type: \"MOVE_LIST\",\n                  payload: {\n                    oldListIndex: source.index,\n                    newListIndex: destination.index\n                  }\n                });\n              }\n              return;\n            }\n            if (source.index !== destination.index ||\n                source.droppableId !== destination.droppableId) {\n                dispatch({\n                  type: \"MOVE_CARD\",\n                  payload: {\n                    sourceListId: source.droppableId,\n                    destListId: destination.droppableId,\n                    oldCardIndex: source.index,\n                    newCardIndex: destination.index\n                  }\n                });\n            }\n     };\n    \n\n  render() {\n    const { board } = this.props;\n    const { addingList } = this.state;\n\n    return (\n        <DragDropContext onDragEnd={this.handleDragEnd}>\n        <Droppable droppableId=\"board\" direction=\"horizontal\" type=\"COLUMN\">\n          {(provided, _snapshot) => (\n            <div className=\"Board\" ref={provided.innerRef}>\n              {board.lists.map((listId, index) => {\n                return <List listId={listId} key={listId} index={index} />;\n              })}\n  \n              {provided.placeholder}\n  \n              <div className=\"Add-List\">\n                {addingList ? (\n                  <AddList toggleAddingList={this.toggleAddingList} />\n                ) : (\n                  <div\n                    onClick={this.toggleAddingList}\n                    className=\"Add-List-Button\"\n                  >\n                    <ion-icon name=\"add\" /> Add a list\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({ board: state.board });\n\nexport default connect(mapStateToProps)(Board);","import React from 'react';\nimport '../styles/App.css';\nimport Board from \"./Board\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"Header\">\n        Personal Task Manager\n      </header>\n      <Board/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers, createStore } from \"redux\";\nimport throttle from \"lodash.throttle\";\nimport data from \"./data\";\n\nconst board = (state = { lists: [] }, action) => {\n    switch (action.type) {\n      case \"ADD_LIST\": {\n        const { listId } = action.payload;\n        return { lists: [...state.lists, listId] };\n      }\n      case \"MOVE_LIST\": {\n        const { oldListIndex, newListIndex } = action.payload;\n        const newLists = Array.from(state.lists);\n        const [removedList] = newLists.splice(oldListIndex, 1);\n        newLists.splice(newListIndex, 0, removedList);\n        return { lists: newLists };\n      }\n      case \"DELETE_LIST\": {\n        const { listId } = action.payload;\n        const filterDeleted = tmpListId => tmpListId !== listId;\n        const newLists = state.lists.filter(filterDeleted);\n        return { lists: newLists };\n      }\n      default:\n        return state;\n    }\n  };\n\n  const listsById = (state = {}, action) => {\n    switch (action.type) {\n      case \"ADD_LIST\": {\n        const { listId, listTitle } = action.payload;\n        return {\n          ...state,\n          [listId]: { id: listId, title: listTitle, cards: []}\n        };\n      }\n      case \"CHANGE_LIST_TITLE\": {\n        const { listId, listTitle } = action.payload;\n        return {\n          ...state,\n          [listId]: { ...state[listId], title: listTitle }\n        };\n      }\n      case \"DELETE_LIST\": {\n        const { listId } = action.payload;\n        const { [listId]: deletedList, ...restOfLists } = state;\n        return restOfLists;\n      }\n      case \"ADD_CARD\": {\n        const { listId, cardId } = action.payload;\n        return {\n          ...state,\n          [listId]: { ...state[listId], cards: [...state[listId].cards, cardId] }\n        };\n      }\n      case \"MOVE_CARD\": {\n        const {\n          oldCardIndex,\n          newCardIndex,\n          sourceListId,\n          destListId\n        } = action.payload;\n        // Move within the same list\n        if (sourceListId === destListId) {\n          const newCards = Array.from(state[sourceListId].cards);\n          const [removedCard] = newCards.splice(oldCardIndex, 1);\n          newCards.splice(newCardIndex, 0, removedCard);\n          return {\n            ...state,\n            [sourceListId]: { ...state[sourceListId], cards: newCards }\n          };\n        }\n        // Move card from one list to another\n        const sourceCards = Array.from(state[sourceListId].cards);\n        const [removedCard] = sourceCards.splice(oldCardIndex, 1);\n        const destinationCards = Array.from(state[destListId].cards);\n        destinationCards.splice(newCardIndex, 0, removedCard);\n        return {\n          ...state,\n          [sourceListId]: { ...state[sourceListId], cards: sourceCards },\n          [destListId]: { ...state[destListId], cards: destinationCards }\n        };\n      }\n      case \"DELETE_CARD\": {\n        const { cardId: deletedCardId, listId } = action.payload;\n        const filterDeleted = cardId => cardId !== deletedCardId;\n        return {\n            ...state,\n            [listId]: {\n              ...state[listId],\n              cards: state[listId].cards.filter(filterDeleted)\n            }\n        };\n      }\n      default:\n        return state;\n    }\n  };\n\n\n  const cardsById = (state = {}, action) => {\n    switch (action.type) {\n      case \"ADD_CARD\": {\n        const { cardText, cardId } = action.payload;\n        return { ...state, [cardId]: { text: cardText, id: cardId, comment:[] } };\n      }\n      case \"CHANGE_CARD_TEXT\": {\n        const { cardText, cardId } = action.payload;\n        return { ...state, [cardId]: { ...state[cardId], text: cardText } };\n      }\n      case \"ADD_COMMENT_TO_CARD\": {\n        const { comment, cardId } = action.payload;\n        return { ...state, [cardId]: { ...state[cardId], comment:[...state[cardId].comment,comment]}};\n      }\n      case \"DELETE_COMMENT\": {\n        const { cardId } = action.payload;\n        return { ...state, [cardId]: { ...state[cardId], comment:[]}};\n      }\n      case \"DELETE_CARD\": {\n        const { cardId } = action.payload;\n        const { [cardId]: deletedCard, ...restOfCards } = state;\n        return restOfCards;\n      }\n      // Find every card from the deleted list and remove it\n      case \"DELETE_LIST\": {\n        const { cards: cardIds } = action.payload;\n        return Object.keys(state)\n          .filter(cardId => !cardIds.includes(cardId))\n          .reduce(\n            (newState, cardId) => ({ ...newState, [cardId]: state[cardId] }),\n            {}\n          );\n      }\n      default:\n        return state;\n    }\n  };\n\n\nconst reducers = combineReducers({\n    board,\n    listsById,\n    cardsById\n});\n\nconst saveState = state => {\n    try {\n      const stateData = JSON.stringify(state);\n      localStorage.setItem(\"state\", stateData);\n    } catch {\n      // ignore write errors\n    }\n};\n\nconst loadState = () => {\n    try {\n      const stateData = localStorage.getItem(\"state\");\n      if (stateData === null) {\n        return undefined;\n      }\n      return JSON.parse(stateData);\n    } catch (err) {\n      return undefined;\n    }\n};\n\nconst savedState = loadState();\nconst store = createStore(reducers, savedState);\n\nstore.subscribe(\n  throttle(() => {\n    saveState(store.getState());\n  }, 1000)\n);\n\nconsole.log(store.getState());\nif (!store.getState().board.lists.length) {\n  console.log(\"data feed\");\n  data(store);\n}\n\nexport default store;\n\n\n\n","import shortid from \"shortid\";\n\nexport default store => {\n  console.log(\"Insert first list\");\n  const firstListId = shortid.generate();\n\n  store.dispatch({\n    type: \"ADD_LIST\",\n    payload: { listId: firstListId, listTitle: \"Badminton\" }\n  });\n\n  store.dispatch({\n    type: \"ADD_CARD\",\n    payload: {\n      listId: firstListId,\n      cardId: shortid.generate(),\n      cardText: \"Play on weekends\"\n    }\n  });\n\n  store.dispatch({\n    type: \"ADD_CARD\",\n    payload: {\n      listId: firstListId,\n      cardId: shortid.generate(),\n      cardText: \"Play daily if it is badminton month\"\n    }\n  });\n\n  const secondListId = shortid.generate();\n\n  store.dispatch({\n    type: \"ADD_LIST\",\n    payload: { listId: secondListId, listTitle: \"Cycling\" }\n  });\n\n  store.dispatch({\n    type: \"ADD_CARD\",\n    payload: {\n      listId: secondListId,\n      cardId: shortid.generate(),\n      cardText: \"Daily 30kms ride\"\n    }\n  });\n\n  store.dispatch({\n    type: \"ADD_CARD\",\n    payload: {\n      listId: secondListId,\n      cardId: shortid.generate(),\n      cardText: \"Daily Commute to Work\"\n    }\n  });\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/App.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './store';\n \nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}